<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1039px" preserveAspectRatio="none" style="width:538px;height:1039px;background:#00000000;" version="1.1" viewBox="0 0 538 1039" width="538px" zoomAndPan="magnify"><defs/><g><ellipse cx="276.75" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="295" x="129.25" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="275" x="139.25" y="71.6016">Set currentIndex = index of the node to heapify</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="204" x="174.75" y="104.1328"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="184" x="184.75" y="125.7344">Set heapSize = size of the heap</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="187.25" y="158.2656"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="159" x="197.25" y="179.8672">Set smallest = currentIndex</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="259" x="147.25" y="212.3984"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="239" x="157.25" y="234">Set leftChildIndex = 2 * currentIndex + 1</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="267" x="143.25" y="266.5313"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="247" x="153.25" y="288.1328">Set rightChildIndex = 2 * currentIndex + 2</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="238" x="157.75" y="364.6641"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="218" x="167.75" y="386.2656">leftChildIndex = 2 * currentIndex + 1</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="153.75" y="418.7969"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="226" x="163.75" y="440.3984">rightChildIndex = 2 * currentIndex + 2</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="194.75" y="521.4072"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="144" x="204.75" y="543.0088">smallest = leftChildIndex</text><polygon fill="#F1F1F1" points="92.25,472.9297,461.25,472.9297,473.25,484.9297,461.25,496.9297,92.25,496.9297,80.25,484.9297,92.25,472.9297" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="18" x="280.75" y="507.5645">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="92.25" y="489.0869">leftChildIndex &lt; heapSize AND heap[leftChildIndex] &lt; heap[smallest]</text><polygon fill="#F1F1F1" points="276.75,575.54,288.75,587.54,276.75,599.54,264.75,587.54,276.75,575.54" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="190.75" y="668.0176"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="152" x="200.75" y="689.6191">smallest = rightChildIndex</text><polygon fill="#F1F1F1" points="83.25,619.54,470.25,619.54,482.25,631.54,470.25,643.54,83.25,643.54,71.25,631.54,83.25,619.54" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="18" x="280.75" y="654.1748">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="83.25" y="635.6973">rightChildIndex &lt; heapSize AND heap[rightChildIndex] &lt; heap[smallest]</text><polygon fill="#F1F1F1" points="276.75,722.1504,288.75,734.1504,276.75,746.1504,264.75,734.1504,276.75,722.1504" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#F1F1F1" points="210.75,766.1504,342.75,766.1504,354.75,778.1504,342.75,790.1504,210.75,790.1504,198.75,778.1504,210.75,766.1504" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="210.75" y="782.3076">smallest != currentIndex</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="18" x="180.75" y="775.8301">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="354.75" y="775.8301">no</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="279" x="11" y="800.1504"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="259" x="21" y="821.752">Swap heap[currentIndex] with heap[smallest]</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="71.5" y="854.2832"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="138" x="81.5" y="875.8848">currentIndex = smallest</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="19.5" y="908.416"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="242" x="29.5" y="930.0176">Update leftChildIndex and rightChildIndex</text><rect fill="#F1F1F1" height="34.1328" rx="3.5" ry="3.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="310" y="800.1504"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="166" x="320" y="821.752">Heap property is maintained</text><ellipse cx="403" cy="865.2832" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="403" cy="865.2832" fill="#222222" rx="6" ry="6" style="stroke:#111111;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="276.75,320.6641,288.75,332.6641,276.75,344.6641,264.75,332.6641,276.75,320.6641" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#F1F1F1" points="210.75,962.5488,342.75,962.5488,354.75,974.5488,342.75,986.5488,210.75,986.5488,198.75,974.5488,210.75,962.5488" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="210.75" y="978.7061">smallest != currentIndex</text><ellipse cx="276.75" cy="1017.5488" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="276.75" cy="1017.5488" fill="#222222" rx="6" ry="6" style="stroke:#111111;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="30" y2="50"/><polygon fill="#454645" points="272.75,40,276.75,50,280.75,40,276.75,44" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="84.1328" y2="104.1328"/><polygon fill="#454645" points="272.75,94.1328,276.75,104.1328,280.75,94.1328,276.75,98.1328" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="138.2656" y2="158.2656"/><polygon fill="#454645" points="272.75,148.2656,276.75,158.2656,280.75,148.2656,276.75,152.2656" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="192.3984" y2="212.3984"/><polygon fill="#454645" points="272.75,202.3984,276.75,212.3984,280.75,202.3984,276.75,206.3984" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="246.5313" y2="266.5313"/><polygon fill="#454645" points="272.75,256.5313,276.75,266.5313,280.75,256.5313,276.75,260.5313" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="398.7969" y2="418.7969"/><polygon fill="#454645" points="272.75,408.7969,276.75,418.7969,280.75,408.7969,276.75,412.7969" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="496.9297" y2="521.4072"/><polygon fill="#454645" points="272.75,511.4072,276.75,521.4072,280.75,511.4072,276.75,515.4072" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="473.25" x2="485.25" y1="484.9297" y2="484.9297"/><polygon fill="#454645" points="481.25,528.4736,485.25,538.4736,489.25,528.4736,485.25,532.4736" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="485.25" x2="485.25" y1="484.9297" y2="587.54"/><line style="stroke:#454645;stroke-width:1.0;" x1="485.25" x2="288.75" y1="587.54" y2="587.54"/><polygon fill="#454645" points="298.75,583.54,288.75,587.54,298.75,591.54,294.75,587.54" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="555.54" y2="575.54"/><polygon fill="#454645" points="272.75,565.54,276.75,575.54,280.75,565.54,276.75,569.54" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="452.9297" y2="472.9297"/><polygon fill="#454645" points="272.75,462.9297,276.75,472.9297,280.75,462.9297,276.75,466.9297" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="643.54" y2="668.0176"/><polygon fill="#454645" points="272.75,658.0176,276.75,668.0176,280.75,658.0176,276.75,662.0176" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="482.25" x2="494.25" y1="631.54" y2="631.54"/><polygon fill="#454645" points="490.25,675.084,494.25,685.084,498.25,675.084,494.25,679.084" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="494.25" x2="494.25" y1="631.54" y2="734.1504"/><line style="stroke:#454645;stroke-width:1.0;" x1="494.25" x2="288.75" y1="734.1504" y2="734.1504"/><polygon fill="#454645" points="298.75,730.1504,288.75,734.1504,298.75,738.1504,294.75,734.1504" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="702.1504" y2="722.1504"/><polygon fill="#454645" points="272.75,712.1504,276.75,722.1504,280.75,712.1504,276.75,716.1504" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="599.54" y2="619.54"/><polygon fill="#454645" points="272.75,609.54,276.75,619.54,280.75,609.54,276.75,613.54" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="150.5" x2="150.5" y1="834.2832" y2="854.2832"/><polygon fill="#454645" points="146.5,844.2832,150.5,854.2832,154.5,844.2832,150.5,848.2832" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="150.5" x2="150.5" y1="888.416" y2="908.416"/><polygon fill="#454645" points="146.5,898.416,150.5,908.416,154.5,898.416,150.5,902.416" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="403" x2="403" y1="834.2832" y2="854.2832"/><polygon fill="#454645" points="399,844.2832,403,854.2832,407,844.2832,403,848.2832" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="198.75" x2="150.5" y1="778.1504" y2="778.1504"/><line style="stroke:#454645;stroke-width:1.0;" x1="150.5" x2="150.5" y1="778.1504" y2="800.1504"/><polygon fill="#454645" points="146.5,790.1504,150.5,800.1504,154.5,790.1504,150.5,794.1504" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="354.75" x2="403" y1="778.1504" y2="778.1504"/><line style="stroke:#454645;stroke-width:1.0;" x1="403" x2="403" y1="778.1504" y2="800.1504"/><polygon fill="#454645" points="399,790.1504,403,800.1504,407,790.1504,403,794.1504" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="150.5" x2="150.5" y1="942.5488" y2="947.5488"/><line style="stroke:#454645;stroke-width:1.0;" x1="150.5" x2="276.75" y1="947.5488" y2="947.5488"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="947.5488" y2="962.5488"/><polygon fill="#454645" points="272.75,952.5488,276.75,962.5488,280.75,952.5488,276.75,956.5488" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="746.1504" y2="766.1504"/><polygon fill="#454645" points="272.75,756.1504,276.75,766.1504,280.75,756.1504,276.75,760.1504" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="344.6641" y2="364.6641"/><polygon fill="#454645" points="272.75,354.6641,276.75,364.6641,280.75,354.6641,276.75,358.6641" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="354.75" x2="512.25" y1="974.5488" y2="974.5488"/><polygon fill="#454645" points="508.25,666.6064,512.25,656.6064,516.25,666.6064,512.25,662.6064" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="512.25" x2="512.25" y1="332.6641" y2="974.5488"/><line style="stroke:#454645;stroke-width:1.0;" x1="512.25" x2="288.75" y1="332.6641" y2="332.6641"/><polygon fill="#454645" points="298.75,328.6641,288.75,332.6641,298.75,336.6641,294.75,332.6641" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="300.6641" y2="320.6641"/><polygon fill="#454645" points="272.75,310.6641,276.75,320.6641,280.75,310.6641,276.75,314.6641" style="stroke:#454645;stroke-width:1.0;"/><line style="stroke:#454645;stroke-width:1.0;" x1="276.75" x2="276.75" y1="986.5488" y2="1006.5488"/><polygon fill="#454645" points="272.75,996.5488,276.75,1006.5488,280.75,996.5488,276.75,1000.5488" style="stroke:#454645;stroke-width:1.0;"/><!--MD5=[1d46db90b0295469f33ff4da0102e0df]
@startuml
skinparamlocked roundcorner 10
skinparamlocked sequenceMessageAlign center
skinparamlocked arrowColor #5ac7c3
skinparamlocked arrowFontColor #white
skinparamlocked participantBackgroundColor #394248
skinparamlocked participantFontColor #57cc8a
skinparamlocked participantBorderColor #394248
skinparamlocked actorFontColor #white
skinparamlocked actorBorderColor #57cc8a
skinparamlocked actorBackgroundColor #transparent
skinparamlocked sequenceLifeLineBorderColor #afbac4
skinparamlocked noteBackgroundColor #f43655
skinparamlocked noteFontColor #white

!theme vibrant
skinparam backgroundColor transparent

skinparam defaultFontColor Black

start
:Set currentIndex = index of the node to heapify;
:Set heapSize = size of the heap;
:Set smallest = currentIndex;
:Set leftChildIndex = 2 * currentIndex + 1;
:Set rightChildIndex = 2 * currentIndex + 2;

repeat 
  :leftChildIndex = 2 * currentIndex + 1;
  :rightChildIndex = 2 * currentIndex + 2;
  if (leftChildIndex < heapSize AND heap[leftChildIndex] < heap[smallest]) then (yes)
    :smallest = leftChildIndex;
  endif
  if (rightChildIndex < heapSize AND heap[rightChildIndex] < heap[smallest]) then (yes)
    :smallest = rightChildIndex;
  endif
  if (smallest != currentIndex) then (yes)
    :Swap heap[currentIndex] with heap[smallest];
    :currentIndex = smallest;
    :Update leftChildIndex and rightChildIndex;
  else (no)
    :Heap property is maintained;
    stop
  endif
repeat while (smallest != currentIndex)

stop
@enduml

@startuml
skinparamlocked roundcorner 10
skinparamlocked sequenceMessageAlign center
skinparamlocked arrowColor #5ac7c3
skinparamlocked arrowFontColor #white
skinparamlocked participantBackgroundColor #394248
skinparamlocked participantFontColor #57cc8a
skinparamlocked participantBorderColor #394248
skinparamlocked actorFontColor #white
skinparamlocked actorBorderColor #57cc8a
skinparamlocked actorBackgroundColor #transparent
skinparamlocked sequenceLifeLineBorderColor #afbac4
skinparamlocked noteBackgroundColor #f43655
skinparamlocked noteFontColor #white

skinparam BackgroundColor FFFFFF
skinparam shadowing false
skinparam RoundCorner 7
skinparam ArrowColor 454645
skinparam FontColor 454645
skinparam SequenceLifeLineBorderColor 696969
skinparam SequenceGroupHeaderFontColor 454645
skinparam SequenceGroupFontColor 696969
skinparam SequenceGroupBorderColor 696969
skinparam SequenceGroupBorderThickness 1

skinparam sequenceDivider {
    BorderColor 454645
    BorderThickness 1
    FontColor 454645
}

skinparam participant {
    BackgroundColor FF6347
    BorderColor 454645
    FontColor FFFFFF
    BorderThickness 1.5
}

skinparam database {
    BackgroundColor 00FFFF
    BorderColor 454645
    FontColor 454645
}

skinparam entity {
    BackgroundColor FFE552
    BorderColor 454645
    FontColor 454645
}

skinparam note {
    BackgroundColor 7FFFD4
    BorderColor 454645
    FontColor 454645
    BorderThickness 1.5
}

skinparam actor {
    BackgroundColor 454645
    BorderColor 454645
    FontColor 454645
}

skinparam boundary {
    BackgroundColor FFE552
    BorderColor 454645
    FontColor 454645
}

skinparam control {
    BackgroundColor FFE552
    BorderColor 454645
    FontColor 454645
}

skinparam collections {
    BackgroundColor FF5F42
    BorderColor 454645
    FontColor 454645
}

skinparam queue {
    BackgroundColor FF6347
    BorderColor 454645
    FontColor FFF
    BorderThickness 1.5
}
skinparam backgroundColor transparent

skinparam defaultFontColor Black

start
:Set currentIndex = index of the node to heapify;
:Set heapSize = size of the heap;
:Set smallest = currentIndex;
:Set leftChildIndex = 2 * currentIndex + 1;
:Set rightChildIndex = 2 * currentIndex + 2;

repeat 
  :leftChildIndex = 2 * currentIndex + 1;
  :rightChildIndex = 2 * currentIndex + 2;
  if (leftChildIndex < heapSize AND heap[leftChildIndex] < heap[smallest]) then (yes)
    :smallest = leftChildIndex;
  endif
  if (rightChildIndex < heapSize AND heap[rightChildIndex] < heap[smallest]) then (yes)
    :smallest = rightChildIndex;
  endif
  if (smallest != currentIndex) then (yes)
    :Swap heap[currentIndex] with heap[smallest];
    :currentIndex = smallest;
    :Update leftChildIndex and rightChildIndex;
  else (no)
    :Heap property is maintained;
    stop
  endif
repeat while (smallest != currentIndex)

stop
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>